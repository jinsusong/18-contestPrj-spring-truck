<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.SELLER_BoardMapper">

	


	<!-- 공지사항 추가 insert  -->
	<insert id ="insertBoardDTO" parameterType="SELLER_BoardDTO">
		INSERT INTO BOARD_POST
		(
			BOARD_P_SEQ,
			BOARD_SEQ,
			TITLE,
			CONTENT,
			USER_SEQ,
			BOARD_COUNT,
			REG_DATE
		)
		VALUES(
			<!-- 시퀀스 자리 -->
			Board_P_SEQ.NEXTVAL,
			#{boardSeq},
			#{title},
			#{boardContent},
			#{userSeq},
			'0',
			SYSDATE
		)
	</insert>
	<!-- 공지사항 리스트   --> <!-- ansi 쿼리는 db ppt6장에 있습니다. 참고하세요  -->
	<select id="getBoardList" resultType="SELLER_BoardDTO">
		SELECT BP.BOARD_P_SEQ as boardPSeq,
				BP.TITLE as title,
				BP.CONTENT as boardContent,
				BP.BOARD_COUNT as boardCount,
				BP.REG_DATE as regDate,
				UI.USER_NICK as userNick
		FROM	BOARD_POST BP INNER JOIN USER_INFO UI
		ON		BP.USER_SEQ = UI.USER_SEQ
		WHERE	BP.BOARD_SEQ = 1
		
	
	</select>	
	<!--공지사항 디테일  -->
	<!-- select 상세목록으로 들어가는 구문   -->
	<select id="getBoardDetail" parameterType="SELLER_BoardDTO" resultType="SELLER_BoardDTO">
		SELECT BP.BOARD_P_SEQ as boardPSeq,
				BP.TITLE as title,
				BP.CONTENT as boardContent,
				BP.BOARD_COUNT as boardCount,
				BP.REG_DATE as regDate,
				UI.USER_NICK as userNick
		FROM	BOARD_POST BP INNER JOIN USER_INFO UI
		ON		BP.USER_SEQ = UI.USER_SEQ
		WHERE BOARD_P_SEQ=#{boardPSeq}
	</select>
	<!-- 조회수 증가 쿼리 -->
	<update id="updateViewCount" parameterType="SELLER_BoardDTO">
		UPDATE BOARD_POST
		SET		BOARD_COUNT=BOARD_COUNT+1 --int(11) 
		WHERE	BOARD_P_SEQ=#{boardPSeq} --int(11)
	</update>
	
	<!--공지사항 ajax -->
	<select id="getBoardNotice" parameterType="SELLER_BoardDTO" resultType="SELLER_BoardDTO">
		 SELECT BP.BOARD_P_SEQ as boardPSeq,
				 BP.BOARD_SEQ as boardSeq,
				BP.TITLE as title,
				BP.CONTENT as boardContent,
				BP.BOARD_COUNT as boardCount,
				BP.REG_DATE as regDate,
				UI.USER_NICK as userNick
		FROM	BOARD_POST BP INNER JOIN USER_INFO UI
		ON		BP.USER_SEQ = UI.USER_SEQ
		WHERE	BP.BOARD_SEQ = #{boardSeq}
		
		<!--  SELECT BP.BOARD_P_SEQ as boardPSeq,
				BP.BOARD_SEQ as boardSeq,
				BP.TITLE as title,
				BP.CONTENT as boardContent,
				BP.BOARD_COUNT as boardCount,
				TO_CHAR(BP.REG_DATE, 'YY-MM-DD') as regDate,
				UI.USER_NICK as userNick
		FROM	BOARD_POST BP INNER JOIN USER_INFO UI
		ON		BP.USER_SEQ = UI.USER_SEQ
		WHERE	BP.BOARD_SEQ = #{boardSeq}
	 -->
	</select>
	<!--고객센터 ajax -->
	<select id="getCustomerCenter" parameterType="SELLER_BoardDTO" resultType="SELLER_BoardDTO">
		 SELECT BP.BOARD_P_SEQ as boardPSeq,
				 BP.BOARD_SEQ as boardSeq,
				BP.TITLE as title,
				BP.CONTENT as boardContent,
				BP.BOARD_COUNT as boardCount,
				BP.REG_DATE as regDate,
				UI.USER_NICK as userNick
		FROM	BOARD_POST BP INNER JOIN USER_INFO UI
		ON		BP.USER_SEQ = UI.USER_SEQ
		WHERE	BP.BOARD_SEQ = #{boardSeq}
	
	</select>
	<!--커뮤니티ajax  -->
	<select id="getBoardCommunity" parameterType="SELLER_BoardDTO" resultType="SELLER_BoardDTO">
		SELECT BP.BOARD_P_SEQ as boardPSeq,
				BP.BOARD_SEQ as boardSeq,
				BP.TITLE as title,
				BP.CONTENT as boardContent,
				BP.BOARD_COUNT as boardCount,
				BP.REG_DATE as regDate,
				UI.USER_NICK as userNick
		FROM	BOARD_POST BP INNER JOIN USER_INFO UI
		ON		BP.USER_SEQ = UI.USER_SEQ
		WHERE	BP.BOARD_SEQ = #{boardSeq}
	</select>
	
	<!-- 게시뭏 삭제  -->
	<delete id="deleteBoardDTO" parameterType="SELLER_BoardDTO">
		 DELETE FROM BOARD_POST
		 WHERE BOARD_P_SEQ = #{boardPSeq}
	</delete>
	
	<!-- 게시물 수정 -->
	<update id="updateBoardDTO" parameterType="SELLER_BoardDTO">
		UPDATE BOARD_POST
		SET 
			TITLE =#{title},
			CONTENT = #{boardContent},
			REG_DATE = SYSDATE
		WHERE BOARD_P_SEQ = #{boardPSeq}
	</update>
	<!-- 댓글 등록 -->
	<insert id="insertReReg" parameterType="SELLER_ReviewDTO">
		INSERT INTO BOARD_REPLE
		(
			REPLE_SEQ,
			BOARD_P_SEQ,
			USER_SEQ,
			BOARD_REPLE_CONTENT,
			REG_DATE,
			BOARD_REPLE_LEVEL,
			EXP_YN
		)
		VALUES
		(
			<!-- 시퀀스 자리 -->
			REVIEW_SEQ.NEXTVAL,
			#{boardPSeq},
			#{userSeq},
			#{content},
			SYSDATE,
			#{reLevel},
			'0'
		)
	</insert>
	<!-- 댓글 List -->
	<select id="getReList" parameterType="SELLER_ReviewDTO" resultType="SELLER_ReviewDTO">
		SELECT
			REPLE_SEQ AS repleSeq,
			BOARD_P_SEQ AS boardPSeq,
			USER_SEQ AS userSeq ,
			BOARD_REPLE_CONTENT AS  content,
			REG_DATE AS regDate,
			BOARD_REPLE_LEVEL AS reLevel,
			EXP_YN AS expYn
		FROM BOARD_REPLE
		WHERE BOARD_P_SEQ = #{boardPSeq}
			
			
	
	</select>
	<!-- upreple view -->
	<select id="getUpreple" parameterType="SELLER_ReviewDTO" resultType="SELLER_ReviewDTO">
		SELECT
			REPLE_SEQ AS repleSeq,
			BOARD_P_SEQ AS boardPSeq,
			USER_SEQ AS userSeq ,
			BOARD_REPLE_CONTENT AS content,
			REG_DATE AS regDate,
			BOARD_REPLE_LEVEL AS reLevel,
			EXP_YN AS expYn
		FROM BOARD_REPLE
		WHERE REPLE_SEQ = #{repleSeq}
	</select>
	<!-- updateRe 댓글 등록 -->
	<update id="updateRe" parameterType="SELLER_ReviewDTO">
		UPDATE BOARD_REPLE
		SET 
			BOARD_REPLE_CONTENT = #{content},
			REG_DATE = SYSDATE
		WHERE
			REPLE_SEQ = #{repleSeq}
	</update>
	<!-- 댓글 삭제 -->
	<delete id="deleteRe" parameterType="SELLER_ReviewDTO">
		 DELETE FROM BOARD_REPLE
		 WHERE REPLE_SEQ = #{repleSeq}
	</delete>
	
	
</mapper>