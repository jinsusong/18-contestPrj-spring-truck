<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.CONSUMER_Ft_ReviewMapper">
	<!-- 푸드트럭 리뷰 리스트 - 답글 포함 -->
	<select id="getFT_Review_List" parameterType="integer" resultType="CONSUMER_Ft_ReviewDTO">
		SELECT 
			FR.REVIEW_SEQ,
			FR.FT_SEQ,
			FR.USER_SEQ,
			FR.FILE_ID,
			FR.REV_TITLE,
			FR.REV_POINT,
			FR.REV_TEXT,
			FR.REV_REGDATE,
			FR.REV_LEVEL,
			FR.EXP_YN,
			UI.USER_NICK
		FROM 
			FT_REVIEW FR
			INNER JOIN USER_INFO UI ON UI.USER_SEQ = FR.USER_SEQ 
		WHERE 
			FR.FT_SEQ=#{ft_seq}
		ORDER BY 
			FR.REV_LEVEL DESC
	</select>
	
	<!-- 푸드트럭 리뷰 리스트 - 답글 제외 - PARK -->
	<select id="getFt_Review_List_ftDetail" parameterType="integer" resultType="CONSUMER_Ft_ReviewDTO">
		SELECT 
			FR.REVIEW_SEQ,
			FR.FT_SEQ,
			FR.USER_SEQ,
			FR.FILE_ID,
			FR.REV_TITLE,
			FR.REV_POINT,
			FR.REV_TEXT,
			FR.REV_REGDATE,
			FR.REV_LEVEL,
			FR.EXP_YN,
			UI.USER_NICK
		FROM 
			FT_REVIEW FR
			INNER JOIN USER_INFO UI ON UI.USER_SEQ = FR.USER_SEQ  
		WHERE 
			FR.FT_SEQ=#{ft_seq} AND 
			FR.REVIEW_SEQ = FR.REV_LEVEL
		ORDER BY 
			FR.REV_REGDATE DESC
	</select>
	
	<select id="getFT_Review_Info" parameterType="integer" resultType="CONSUMER_Ft_ReviewDTO">
		SELECT 
			FR.REVIEW_SEQ as review_seq,
			FR.FT_SEQ as ft_seq,
			FR.USER_SEQ as user_seq,
			FR.FILE_ID as file_id,
			FR.REV_TITLE as rev_title,
			FR.REV_POINT as rev_point,
			FR.REV_TEXT as rev_text,
			FR.REV_REGDATE as rev_regdate,
			FR.REV_LEVEL as rev_level,
			FR.EXP_YN as exp_yn,
			UI.USER_NICK as user_nick
		FROM 
			FT_REVIEW FR
			INNER JOIN USER_INFO UI ON UI.USER_SEQ = FR.USER_SEQ 
		WHERE 
			REVIEW_SEQ=#{review_seq}
			
		ORDER BY FR.REV_REGDATE DESC
	</select>
	
	<delete id="ft_Review_Delete" parameterType="integer">
		DELETE FROM FT_REVIEW WHERE REVIEW_SEQ=#{review_seq} 
	</delete>
	
	<update id="ft_Review_Exp_Yn" parameterType="integer">
		UPDATE FT_REVIEW SET
		EXP_YN=EXP_YN*-1
		WHERE REVIEW_SEQ=#{review_seq}
	</update>
	
	<update id="ft_Review_Edit" parameterType="CONSUMER_Ft_ReviewDTO" >
		UPDATE FT_REVIEW SET
			FILE_ID=#{file_id},
			REV_TITLE=#{rev_title},
			REV_TEXT=#{rev_text},
			REV_POINT=#{rev_point},
			EXP_YN=#{exp_yn}
		WHERE REVIEW_SEQ=#{review_seq}
	</update>
	
	<update id="ft_Review_Reple_Edit" parameterType="CONSUMER_Ft_ReviewDTO" >
		UPDATE FT_REVIEW SET
			REV_TEXT=#{rev_text}
		WHERE REVIEW_SEQ=#{review_seq}
	</update>
	
	<insert id="ft_Review_Create" parameterType="CONSUMER_Ft_ReviewDTO">
		INSERT INTO FT_REVIEW
		(
		    FT_SEQ,
		    USER_SEQ,
		    FILE_ID,
		    REV_TITLE,
		    REV_POINT,
		    REV_TEXT,
		    REV_REGDATE,
		    REV_LEVEL,
		    EXP_YN
		)
		VALUES
		(
			#{ft_seq},
		    #{user_seq},
		    #{file_id},
		    #{rev_title},
		    #{rev_point},
		    #{rev_text},
		    #{rev_regdate},
		    #{rev_level},
		    #{exp_yn}
		)
	</insert>
	
	<update id="ft_Set_Rev_level" parameterType="integer">
		UPDATE FT_REVIEW SET
		REV_LEVEL=#{review_seq}
		WHERE REVIEW_SEQ=#{review_seq}
	</update>
	
	<update id="ft_Set_Revp_level" parameterType="CONSUMER_Ft_ReviewDTO">
		UPDATE FT_REVIEW SET
		REV_LEVEL=#{rev_level}
		WHERE REVIEW_SEQ=#{review_seq}
	</update>
	
	<select id="getReview_LevP_List" parameterType="string" resultType="CONSUMER_Ft_ReviewDTO">
		SELECT * FROM FT_REVIEW
		WHERE SUBSTR(REV_LEVEL,1,(INSTR(REV_LEVEL, '-'))) = #{search_level}
	</select>
	
	<select id="getReview_Reple_Cnt" parameterType="string" resultType="integer">
		SELECT count(*) FROM FT_REVIEW
		WHERE SUBSTR(REV_LEVEL,1,(INSTR(REV_LEVEL, '-'))) = #{search_level}
	</select>
</mapper>